name: Build and Deploy Lambda

env:
  ARTIFACT_NAME: csye6225-lambda.zip
  CODEDEPLOY_APPLICATION_NAME: ${{ secrets.CODEDEPLOY_LAMBDA_APPLICATION_NAME }}
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: ${{ secrets.CODEDEPLOY_LAMBDA_APPLICATION_DEPLOYMENT_GROUP_NAME }}
  AWS_REGION: us-east-1

  CODE_DEPLOY_BUCKET_NAME: ${{ secrets.CODE_DEPLOY_SERVERLESS_BUCKET_NAME }}
  DEV_GHACTION_AWS_ACCESS_KEY_ID: ${{ secrets.DEV_GHACTION_AWS_ACCESS_KEY_ID }}
  DEV_GHACTION_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_GHACTION_AWS_SECRET_ACCESS_KEY }}
  PROD_CODEDEPLOY_BUCKET_NAME: severless.prod.zhenyuye.me

on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  code_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Deployment Artifact
        run: |
          echo "Build Deployment Artifact ${{ github.run_number }}"
          pwd
          ls -al
          mkdir -p codedeploy_artifact
          zip -r ${{ env.ARTIFACT_NAME }} *.js
          mv ${{ env.ARTIFACT_NAME}} codedeploy_artifact/
          mv *yml codedeploy_artifact/
          cd codedeploy_artifact
          pwd
          ls -al
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.DEV_GHACTION_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.DEV_GHACTION_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: get current alias version
        id: set version
        run: |
          output=$(aws lambda get-alias --function-name webapp_lambda --name sendEmail)
          echo "$output"
          echo "::set-output name=version::${{fromJson($output).FunctionVersion}}"
          echo "---$output" | jq -r '.FunctionVersion'
